/*
 * This file is generated by jOOQ.
*/
package uk.gov.beis.dceas.db.gen.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import uk.gov.beis.dceas.db.gen.DefaultSchema;
import uk.gov.beis.dceas.db.gen.Keys;
import uk.gov.beis.dceas.db.gen.tables.records.UserStateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserState extends TableImpl<UserStateRecord> {

    private static final long serialVersionUID = -1523356579;

    /**
     * The reference instance of <code>user_state</code>
     */
    public static final UserState USER_STATE = new UserState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserStateRecord> getRecordType() {
        return UserStateRecord.class;
    }

    /**
     * The column <code>user_state.reference</code>.
     */
    public final TableField<UserStateRecord, String> REFERENCE = createField("reference", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>user_state.state</code>.
     */
    public final TableField<UserStateRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>user_state.updated</code>.
     */
    public final TableField<UserStateRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>user_state</code> table reference
     */
    public UserState() {
        this("user_state", null);
    }

    /**
     * Create an aliased <code>user_state</code> table reference
     */
    public UserState(String alias) {
        this(alias, USER_STATE);
    }

    private UserState(String alias, Table<UserStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserState(String alias, Table<UserStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserStateRecord> getPrimaryKey() {
        return Keys.PK_USER_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserStateRecord>> getKeys() {
        return Arrays.<UniqueKey<UserStateRecord>>asList(Keys.PK_USER_STATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserState as(String alias) {
        return new UserState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserState rename(String name) {
        return new UserState(name, null);
    }
}
