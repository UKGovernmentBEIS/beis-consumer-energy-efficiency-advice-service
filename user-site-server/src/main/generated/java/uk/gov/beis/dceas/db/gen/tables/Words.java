/*
 * This file is generated by jOOQ.
*/
package uk.gov.beis.dceas.db.gen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import uk.gov.beis.dceas.db.gen.DefaultSchema;
import uk.gov.beis.dceas.db.gen.Keys;
import uk.gov.beis.dceas.db.gen.tables.records.WordsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Words extends TableImpl<WordsRecord> {

    private static final long serialVersionUID = 422038164;

    /**
     * The reference instance of <code>words</code>
     */
    public static final Words WORDS = new Words();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WordsRecord> getRecordType() {
        return WordsRecord.class;
    }

    /**
     * The column <code>words.word</code>.
     */
    public final TableField<WordsRecord, String> WORD = createField("word", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>words</code> table reference
     */
    public Words() {
        this("words", null);
    }

    /**
     * Create an aliased <code>words</code> table reference
     */
    public Words(String alias) {
        this(alias, WORDS);
    }

    private Words(String alias, Table<WordsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Words(String alias, Table<WordsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WordsRecord> getPrimaryKey() {
        return Keys.PK_WORDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WordsRecord>> getKeys() {
        return Arrays.<UniqueKey<WordsRecord>>asList(Keys.PK_WORDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Words as(String alias) {
        return new Words(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Words rename(String name) {
        return new Words(name, null);
    }
}
